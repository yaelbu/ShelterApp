apply plugin: 'com.android.application'



apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'findbugs'





android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        applicationId "com.example.example"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    testOptions {
        unitTests.returnDefaultValues = true

        unitTests {
            includeAndroidResources = true
        }
        unitTests.all {
            systemProperty 'robolectric.enabledSdks', '21'
        }

    }
    



    sourceSets {


        androidTest {
            setRoot('src/androidTest')
        }

        main {
            java.srcDirs = ['src/main/java']
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}


task checkstyle(type: Checkstyle) {
    configFile = file("${rootDir}/checkstyle.xml")

    source 'src/main/java'
    include '**/*.java'
    exclude '**/gen/**'

    ignoreFailures true
    showViolations true

    classpath = files()
}


checkstyle {
    toolVersion "8.17"
}

project.afterEvaluate {
    preBuild.dependsOn 'checkstyle'
}




task findbugs(type: FindBugs) {
    ignoreFailures = true
    effort = "max"
    reportLevel = "low"
    classes = files("$project.buildDir/intermediates/javac")
    excludeFilter = file("${rootDir}/findbugs.xml")
    source 'src/main/java'
    classpath = files()
    reports {
        xml.enabled = false
        html.enabled = true
        html.destination file("$project.buildDir/outputs/findbugs/findbugs-output.html")
    }
}



task pmd(type: Pmd) {
    ruleSetFiles = files("${rootDir}/pmd.xml")
    ignoreFailures = true
  ruleSets = []
    source 'src/main/java'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = false
        html.enabled = true
        html.destination = file("$project.buildDir/outputs/pmd/pmd.html")
    }
}







check.dependsOn  'pmd','findbugs'




dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.android.libraries.places:places:2.2.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'junit:junit:4.12'
    testImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'com.google.firebase:firebase-core:16.0.5'
    implementation 'com.google.firebase:firebase-firestore:21.4.2'


    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'

    testImplementation 'androidx.test:core:1.0.0'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    testImplementation 'org.testng:testng:6.9.6'
    testImplementation 'org.robolectric:robolectric:4.2.1'
    androidTestImplementation 'org.robolectric:robolectric:4.2.1'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.google.android.material:material:1.0.0'

    //implementation "com.android.support:design:27.1.0"

    //implementation 'com.android.support:appcompat-v7:26.+'

}
apply plugin: 'com.google.gms.google-services'
